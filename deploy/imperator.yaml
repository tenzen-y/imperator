apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: imperator
  name: machinenodepools.imperator.tenzen-y.io
spec:
  group: imperator.tenzen-y.io
  names:
    kind: MachineNodePool
    listKind: MachineNodePoolList
    plural: machinenodepools
    singular: machinenodepool
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.machineGroupName
      name: Group
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MachineNodePool is the Schema for the machinenodepools API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MachineNodePoolSpec defines the desired state of MachineNodePool
            properties:
              machineGroupName:
                description: MachineGroupName is node pool group
                type: string
              machineTypeStock:
                description: MachineTypeStock is available machineType list.
                items:
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              nodePool:
                description: NodePool is node list that machineGroup is managing.
                items:
                  properties:
                    machineType:
                      items:
                        properties:
                          name:
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    mode:
                      enum:
                      - ready
                      - maintenance
                      type: string
                    name:
                      type: string
                    taint:
                      description: default=false
                      type: boolean
                  required:
                  - machineType
                  - mode
                  - name
                  type: object
                type: array
            required:
            - machineGroupName
            - machineTypeStock
            - nodePool
            type: object
          status:
            description: MachineNodePoolStatus defines the observed state of MachineNodePool
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              nodePool:
                items:
                  properties:
                    condition:
                      description: MachineNodeCondition is condition of Kubernetes
                        Nodes
                      enum:
                      - Healthy
                      - Maintenance
                      - Unhealthy
                      type: string
                    name:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: imperator
  name: machines.imperator.tenzen-y.io
spec:
  group: imperator.tenzen-y.io
  names:
    kind: Machine
    listKind: MachineList
    plural: machines
    singular: machine
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.labels['imperator\.tenzen-y\.io/machine-group']
      name: Group
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Machine is the Schema for the machines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MachineSpec defines the desired state of Machine
            properties:
              machineTypes:
                items:
                  properties:
                    available:
                      format: int32
                      minimum: 0
                      type: integer
                    name:
                      type: string
                    spec:
                      properties:
                        cpu:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        gpu:
                          properties:
                            family:
                              description: nvidia.com/gpu.family
                              type: string
                            machine:
                              description: nvidia.com/gpu.machine
                              type: string
                            num:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            product:
                              description: nvidia.com/gpu.product
                              type: string
                            type:
                              description: ResourceName is the name identifying various
                                resources in a ResourceList.
                              type: string
                          type: object
                        memory:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      required:
                      - cpu
                      - memory
                      type: object
                  required:
                  - available
                  - name
                  - spec
                  type: object
                type: array
              nodePool:
                description: NodePool is node list that machineGroup is managing.
                items:
                  properties:
                    machineType:
                      items:
                        properties:
                          name:
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    mode:
                      enum:
                      - ready
                      - maintenance
                      type: string
                    name:
                      type: string
                    taint:
                      description: default=false
                      type: boolean
                  required:
                  - machineType
                  - mode
                  - name
                  type: object
                type: array
            required:
            - machineTypes
            - nodePool
            type: object
          status:
            description: MachineStatus defines the observed state of Machine
            properties:
              availableMachines:
                items:
                  properties:
                    name:
                      type: string
                    usage:
                      properties:
                        maximum:
                          format: int32
                          minimum: 0
                          type: integer
                        reserved:
                          format: int32
                          minimum: 0
                          type: integer
                        used:
                          format: int32
                          minimum: 0
                          type: integer
                        waiting:
                          format: int32
                          minimum: 0
                          type: integer
                      required:
                      - maximum
                      - reserved
                      - used
                      - waiting
                      type: object
                  type: object
                type: array
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-controller
  namespace: imperator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-leader-election-role
  namespace: imperator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - imperator.tenzen-y.io
  resources:
  - machinenodepools
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - imperator.tenzen-y.io
  resources:
  - machinenodepools/finalizers
  verbs:
  - update
- apiGroups:
  - imperator.tenzen-y.io
  resources:
  - machinenodepools/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - imperator.tenzen-y.io
  resources:
  - machines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - imperator.tenzen-y.io
  resources:
  - machines/finalizers
  verbs:
  - update
- apiGroups:
  - imperator.tenzen-y.io
  resources:
  - machines/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-leader-election-rolebinding
  namespace: imperator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: imperator-leader-election-role
subjects:
- kind: ServiceAccount
  name: imperator-controller
  namespace: imperator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: imperator-proxy-role
subjects:
- kind: ServiceAccount
  name: imperator-controller
  namespace: imperator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: imperator-manager-role
subjects:
- kind: ServiceAccount
  name: imperator-controller
  namespace: imperator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-metrics-service
  namespace: imperator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: imperator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-webhook-service
  namespace: imperator-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/name: imperator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-controller
  namespace: imperator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: imperator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: imperator
    spec:
      containers:
      - args:
        - --leader-elect
        command:
        - /imperator-controller
        env:
        - name: IMPERATOR_CORE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/tenzen-y/imperator/imperator-controller:v0.0.1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: imperator-controller
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      securityContext:
        runAsNonRoot: true
      serviceAccountName: imperator-controller
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-serving-cert
  namespace: imperator-system
spec:
  dnsNames:
  - imperator-webhook-service.imperator-system.svc
  - imperator-webhook-service.imperator-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: imperator-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-selfsigned-issuer
  namespace: imperator-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: imperator-system/imperator-serving-cert
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: imperator-webhook-service
      namespace: imperator-system
      path: /mutate-core-v1-pod
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: mutator.pod.imperator.tenzen-y.io
  namespaceSelector:
    matchExpressions:
    - key: imperator.tenzen.io/inject-resource
      operator: In
      values:
      - enabled
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: imperator-webhook-service
      namespace: imperator-system
      path: /mutate-imperator-tenzen-y-io-v1alpha1-machine
  failurePolicy: Fail
  name: defaulter.machine.imperator.tenzen-y.io
  rules:
  - apiGroups:
    - imperator.tenzen-y.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - machines
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: imperator-system/imperator-serving-cert
  labels:
    app.kubernetes.io/name: imperator
  name: imperator-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: imperator-webhook-service
      namespace: imperator-system
      path: /validate-imperator-tenzen-y-io-v1alpha1-machine
  failurePolicy: Fail
  name: validator.machine.imperator.tenzen-y.io
  rules:
  - apiGroups:
    - imperator.tenzen-y.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - machines
  sideEffects: None
